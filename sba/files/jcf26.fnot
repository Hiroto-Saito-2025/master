ring([px2,px3,px4,px5,px6,py3,py4,py5,pz4,pz5,bx2,bx3,bx4,bx5,by3,by4,by5,bz4,bz5,d1,d2,d3,d4,d5,d6,x1,x2,x3,y1,y2,y3,z1,z2,z3],0,2,32003);
buch(2500*d1+2771,2500*d2+5809,500*d3+1009,625*d4+1562,10000*d5+31361,625*d6+1143,5000*bx5+5113,10000*bx4-5203,5000*bx3+463,bx2-1,2000*by5-2747,16000*by4+719,1000*by3-1799,625*bz5+1134,10000*bz4-18203,10000*px6+25081,10000*px5+9141,1250*px4+247,8000*px3+2661,10000*px2+25071,5000*py5-723,20000*py4+18129,2500000*py3-1471347,2500*pz5+4891,2500*pz4-1421,4*bx2*px6*x2+(2*px2-2*px6)*d1^2+2*px6*d2^2-2*px6*px2^2+(2*px6^2-2*d6^2)*px2-2*bx2^2*px6,((4*pz5*x1-4*bx5*pz5)*y2+(-4*pz5*x2+4*bx5*pz5)*y1+4*by5*pz5*x2-4*by5*pz5*x1-4*bz5*py5*px2)*z3+((-4*pz5*x1+4*bx5*pz5)*y3+(4*pz5*x3-4*bx5*pz5)*y1-4*by5*pz5*x3+4*by5*pz5*x1+4*bz5*py5*px3-4*bz5*py3*px5)*z2+((4*pz5*x2-4*bx5*pz5)*y3+(-4*pz5*x3+4*bx5*pz5)*y2+4*by5*pz5*x3-4*by5*pz5*x2+(-4*bz5*py3+4*bz5*py5)*px2-4*bz5*py5*px3+4*bz5*py3*px5)*z1+(-4*bz5*pz5*x2+4*bz5*pz5*x1+(4*by3-4*by5)*py5*px2)*y3+(4*bz5*pz5*x3-4*bz5*pz5*x1+4*by5*py5*px3-4*by5*py3*px5)*y2+(-4*bz5*pz5*x3+4*bz5*pz5*x2+(-4*by5*py3+4*by5*py5)*px2-4*by5*py5*px3+4*by5*py3*px5)*y1+(4*bx3-4*bx5)*py5*px2*x3+((-4*bx2+4*bx5)*py5*px3+(4*bx2-4*bx5)*py3*px5)*x2+((-4*bx5*py3+4*bx5*py5)*px2-4*bx5*py5*px3+4*bx5*py3*px5)*x1+((2*py3-2*py5)*px2+2*py5*px3-2*py3*px5)*d1^2+(-2*py5*px3+2*py3*px5)*d2^2+(2*py5*px3-2*py3*px5)*px2^2+(-2*py5*px3^2+2*py3*px5^2-2*py5*py3^2+(2*py5^2+2*pz5^2+2*bx5^2+2*by5^2+2*bz5^2-2*d5^2)*py3+(-2*bx3^2-2*by3^2+2*d3^2)*py5)*px2+2*bx2^2*py5*px3-2*bx2^2*py3*px5,((4*pz4*x1-4*bx4*pz4)*y2+(-4*pz4*x2+4*bx4*pz4)*y1+4*by4*pz4*x2-4*by4*pz4*x1-4*bz4*py4*px2)*z3+((-4*pz4*x1+4*bx4*pz4)*y3+(4*pz4*x3-4*bx4*pz4)*y1-4*by4*pz4*x3+4*by4*pz4*x1+4*bz4*py4*px3-4*bz4*py3*px4)*z2+((4*pz4*x2-4*bx4*pz4)*y3+(-4*pz4*x3+4*bx4*pz4)*y2+4*by4*pz4*x3-4*by4*pz4*x2+(-4*bz4*py3+4*bz4*py4)*px2-4*bz4*py4*px3+4*bz4*py3*px4)*z1+(-4*bz4*pz4*x2+4*bz4*pz4*x1+(4*by3-4*by4)*py4*px2)*y3+(4*bz4*pz4*x3-4*bz4*pz4*x1+4*by4*py4*px3-4*by4*py3*px4)*y2+(-4*bz4*pz4*x3+4*bz4*pz4*x2+(-4*by4*py3+4*by4*py4)*px2-4*by4*py4*px3+4*by4*py3*px4)*y1+(4*bx3-4*bx4)*py4*px2*x3+((-4*bx2+4*bx4)*py4*px3+(4*bx2-4*bx4)*py3*px4)*x2+((-4*bx4*py3+4*bx4*py4)*px2-4*bx4*py4*px3+4*bx4*py3*px4)*x1+((2*py3-2*py4)*px2+2*py4*px3-2*py3*px4)*d1^2+(-2*py4*px3+2*py3*px4)*d2^2+(2*py4*px3-2*py3*px4)*px2^2+(-2*py4*px3^2+2*py3*px4^2-2*py4*py3^2+(2*py4^2+2*pz4^2+2*bx4^2+2*by4^2+2*bz4^2-2*d4^2)*py3+(-2*bx3^2-2*by3^2+2*d3^2)*py4)*px2+2*bx2^2*py4*px3-2*bx2^2*py3*px4,2*z2*z3+(2*y2-2*by3)*y3+(2*x2-2*bx3)*x3-2*bx2*x2-d2^2+px2^2-2*px3*px2+px3^2+py3^2+bx2^2+bx3^2+by3^2-d3^2,2*z1*z3+(2*y1-2*by3)*y3+(2*x1-2*bx3)*x3-d1^2+px3^2+py3^2+bx3^2+by3^2-d3^2,2*z1*z2+2*y1*y2+(2*x1-2*bx2)*x2-d1^2-d2^2+px2^2+bx2^2,z3^2+y3^2-2*by3*y3+x3^2-2*bx3*x3+bx3^2+by3^2-d3^2,z2^2+y2^2+x2^2-2*bx2*x2-d2^2+bx2^2,z1^2+y1^2+x1^2-d1^2);
